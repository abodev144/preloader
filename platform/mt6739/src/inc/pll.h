/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

#ifndef PLL_H
//#include "custom_emi.h"
#define PLL_H

//#define TOPCKGEN_BASE			(0x10000000)
#define APMIXED_BASE			(0x1000c000)
#define TOPCKGEN_AO_REG			(0x1001B000)
#define MCUCFG_BASE			(0x10200000)
#define AUDIO_BASE			(0x11220000)
#define MMSYS_CONFIG_BASE		(0x14000000)
#define IMGSYS_BASE			(0x15000000)
#define VENC_GCON_BASE			(0x17000000)
//#define INFRACFG_AO_BASE		(0x10000000)
//#define PERICFG_BASE	        	(0x11010000)
//#define MFGCFG_BASE			(0x13ffe000)

/* SPM Register*/
//#define POWERON_CONFIG_EN	(SPM_BASE + 0x0)
//#define SLEEP_BASE		(SPM_BASE + 0x0)

/* APMIXEDSYS Register */
#define AP_PLL_CON0		(APMIXED_BASE + 0x0)
#define AP_PLL_CON1		(APMIXED_BASE + 0x004)
#define AP_PLL_CON2		(APMIXED_BASE + 0x008)
#define AP_PLL_CON3		(APMIXED_BASE + 0x00C)
#define AP_PLL_CON4		(APMIXED_BASE + 0x010)
#define AP_PLL_CON5		(APMIXED_BASE + 0x014)
#define AP_PLL_CON6		(APMIXED_BASE + 0x018)
#define AP_PLL_CON7		(APMIXED_BASE + 0x01C)
#define AP_PLL_CON8		(APMIXED_BASE + 0x020)
#define CLKSQ_STB_CON0		(APMIXED_BASE + 0x024)
#define PLL_PWR_CON0 		(APMIXED_BASE + 0x028)
#define PLL_PWR_CON1		(APMIXED_BASE + 0x02C)
#define PLL_ISO_CON0		(APMIXED_BASE + 0x030)
#define PLL_ISO_CON1		(APMIXED_BASE + 0x034)
#define PLL_STB_CON0		(APMIXED_BASE + 0x038)
#define DIV_STB_CON0 		(APMIXED_BASE + 0x03C)
#define PLL_CHG_CON0		(APMIXED_BASE + 0x040)
#define PLL_TEST_CON0		(APMIXED_BASE + 0x044)
#define PLL_TEST_CON1		(APMIXED_BASE + 0x048)
#define ARMPLL_LL_CON0		(APMIXED_BASE + 0x200)
#define ARMPLL_LL_CON1		(APMIXED_BASE + 0x204)
#define ARMPLL_LL_CON2		(APMIXED_BASE + 0x208)
#define ARMPLL_LL_PWR_CON0	(APMIXED_BASE + 0x20C)
#define MAINPLL_CON0		(APMIXED_BASE + 0x220)
#define MAINPLL_CON1		(APMIXED_BASE + 0x224)
#define MAINPLL_CON2		(APMIXED_BASE + 0x228)
#define MAINPLL_PWR_CON0	(APMIXED_BASE + 0x22C)
#define UNIVPLL_CON0		(APMIXED_BASE + 0x230)
#define UNIVPLL_CON1		(APMIXED_BASE + 0x234)
#define UNIVPLL_CON2		(APMIXED_BASE + 0x238)
#define UNIVPLL_PWR_CON0	(APMIXED_BASE + 0x23C)
#define MFGPLL_CON0		(APMIXED_BASE + 0x240)
#define MFGPLL_CON1		(APMIXED_BASE + 0x244)
#define MFGPLL_CON2		(APMIXED_BASE + 0x248)
#define MFGPLL_PWR_CON0		(APMIXED_BASE + 0x24C)
#define MSDCPLL_CON0		(APMIXED_BASE + 0x250)
#define MSDCPLL_CON1		(APMIXED_BASE + 0x254)
#define MSDCPLL_CON2		(APMIXED_BASE + 0x258)
#define MSDCPLL_PWR_CON0	(APMIXED_BASE + 0x25C)
#define MMPLL_CON0		(APMIXED_BASE + 0x270)
#define MMPLL_CON1		(APMIXED_BASE + 0x274)
#define MMPLL_CON2		(APMIXED_BASE + 0x278)
#define MMPLL_PWR_CON0		(APMIXED_BASE + 0x27C)
#define APLL1_CON0		(APMIXED_BASE + 0x2A0)
#define APLL1_CON1		(APMIXED_BASE + 0x2A4)
#define APLL1_CON2		(APMIXED_BASE + 0x2A8)
#define APLL1_CON3		(APMIXED_BASE + 0x2AC)
#define APLL1_PWR_CON0		(APMIXED_BASE + 0x2B0)
#define AP_AUXADC_CON0		(APMIXED_BASE + 0x400)
#define AP_AUXADC_CON1		(APMIXED_BASE + 0x404)
#define AP_AUXADC_CON2		(APMIXED_BASE + 0x408)
#define AP_AUXADC_CON3		(APMIXED_BASE + 0x40C)
#define AP_AUXADC_CON4		(APMIXED_BASE + 0x410)
#define AP_AUXADC_CON5		(APMIXED_BASE + 0x414)
#define TS_CON0			(APMIXED_BASE + 0x600)
#define TS_CON1			(APMIXED_BASE + 0x604)
#define TS_CON2			(APMIXED_BASE + 0x608)
#define AP_ABIST_MON_CON0	(APMIXED_BASE + 0x800)
#define AP_ABIST_MON_CON1	(APMIXED_BASE + 0x804)
#define AP_ABIST_MON_CON2	(APMIXED_BASE + 0x808)
#define AP_ABIST_MON_CON3	(APMIXED_BASE + 0x80C)
#define OCCSCAN_CON0		(APMIXED_BASE + 0x810)
#define CLKDIV_CON0		(APMIXED_BASE + 0x814)
#define OCCSCAN_CON1		(APMIXED_BASE + 0x818)
#define OCCSCAN_CON2		(APMIXED_BASE + 0x81C)
#define MCU_OCCSCAN_CON0	(APMIXED_BASE + 0x820)
#define RSV_RW0_CON0		(APMIXED_BASE + 0x900)
#define RSV_RW1_CON0		(APMIXED_BASE + 0x904)
#define RSV_RO_CON0		(APMIXED_BASE + 0x908)


/* MCUCFG Register */
#define INFRA_TOPCKGEN_CKMUXSEL		(TOPCKGEN_AO_REG + 0x0)
#define ACLKEN_DIV					(MCUCFG_BASE + 0x640)

//#define MP0_PLL_DIV_CFG          (MCUCFG_BASE + 0x7A0) //ARMPLL_M
//#define MP1_PLL_DIV_CFG          (MCUCFG_BASE + 0x7A4) //ARMPLL_L
//#define MP2_PLL_DIV_CFG          (MCUCFG_BASE + 0x7A8) //ARMPLL_B
//#define MP3_PLL_DIV_CFG          (MCUCFG_BASE + 0x7AC) //no used
//#define BUS_PLL_DIV_CFG          (MCUCFG_BASE + 0x7C0) //CCIPLL

/* infracfg_ao Base address: (+10001000h) */
#define INFRA_GLOBALCON_DCMCTL			(INFRACFG_AO_BASE + 0x50)
#define INFRA_BUS_DCM_CTRL			(INFRACFG_AO_BASE + 0x70)
#define PERI_BUS_DCM_CTRL			(INFRACFG_AO_BASE + 0x74)
#define MODULE_SW_CG_0_SET			(INFRACFG_AO_BASE + 0x80)
#define MODULE_SW_CG_0_CLR			(INFRACFG_AO_BASE + 0x84)
#define MODULE_SW_CG_1_SET			(INFRACFG_AO_BASE + 0x88)
#define MODULE_SW_CG_1_CLR			(INFRACFG_AO_BASE + 0x8C)
#define MODULE_SW_CG_0_STA			(INFRACFG_AO_BASE + 0x90)
#define MODULE_SW_CG_1_STA			(INFRACFG_AO_BASE + 0x94)
#define MODULE_CLK_SEL				(INFRACFG_AO_BASE + 0x98)
#define MODULE_SW_CG_2_SET			(INFRACFG_AO_BASE + 0xA4)
#define MODULE_SW_CG_2_CLR			(INFRACFG_AO_BASE + 0xA8)
#define MODULE_SW_CG_2_STA			(INFRACFG_AO_BASE + 0xAC)
#define MODULE_SW_CG_3_SET			(INFRACFG_AO_BASE + 0xC0)
#define MODULE_SW_CG_3_CLR			(INFRACFG_AO_BASE + 0xC4)
#define MODULE_SW_CG_3_STA			(INFRACFG_AO_BASE + 0xC8)
#define INFRA_TOPAXI_PROTECTEN   		(INFRACFG_AO_BASE + 0x0220)
#define INFRA_TOPAXI_PROTECTEN_STA1		(INFRACFG_AO_BASE + 0x0228)
#define INFRA_TOPAXI_PROTECTEN_1		(INFRACFG_AO_BASE + 0x0250)
#define INFRA_TOPAXI_PROTECTEN_STA1_1		(INFRACFG_AO_BASE + 0x0258)
#define INFRA_TOPAXI_PROTECTEN_SET			(INFRACFG_AO_BASE + 0x02A0)
#define INFRA_TOPAXI_PROTECTEN_CLR			(INFRACFG_AO_BASE + 0x02A4)
#define INFRA_TOPAXI_PROTECTEN_1_SET		(INFRACFG_AO_BASE + 0x02A8)
#define INFRA_TOPAXI_PROTECTEN_1_CLR		(INFRACFG_AO_BASE + 0x02AC)


/* MMSYS Register*/
#define MMSYS_CG_CON0		(MMSYS_CONFIG_BASE + 0x100)
#define MMSYS_CG_SET0		(MMSYS_CONFIG_BASE + 0x104)
#define MMSYS_CG_CLR0		(MMSYS_CONFIG_BASE + 0x108)
#define MMSYS_CG_CON1		(MMSYS_CONFIG_BASE + 0x110)
#define MMSYS_CG_SET1		(MMSYS_CONFIG_BASE + 0x114)
#define MMSYS_CG_CLR1		(MMSYS_CONFIG_BASE + 0x118)


/* TOPCKGEN Register */
#define CLK_MODE		(TOPCKGEN_BASE + 0x0)
#define CLK_CFG_UPDATE		(TOPCKGEN_BASE + 0x004)
#define CLK_CFG_UPDATE1		(TOPCKGEN_BASE + 0x008)
#define CLK_CFG_0		(TOPCKGEN_BASE + 0x040)
#define CLK_CFG_0_SET		(TOPCKGEN_BASE + 0x044)
#define CLK_CFG_0_CLR		(TOPCKGEN_BASE + 0x048)
#define CLK_CFG_1 		(TOPCKGEN_BASE + 0x050)
#define CLK_CFG_1_SET		(TOPCKGEN_BASE + 0x054)
#define CLK_CFG_1_CLR		(TOPCKGEN_BASE + 0x058)
#define CLK_CFG_2		(TOPCKGEN_BASE + 0x060)
#define CLK_CFG_2_SET		(TOPCKGEN_BASE + 0x064)
#define CLK_CFG_2_CLR		(TOPCKGEN_BASE + 0x068)
#define CLK_CFG_3		(TOPCKGEN_BASE + 0x070)
#define CLK_CFG_3_SET		(TOPCKGEN_BASE + 0x074)
#define CLK_CFG_3_CLR		(TOPCKGEN_BASE + 0x078)
#define CLK_CFG_4		(TOPCKGEN_BASE + 0x080)
#define CLK_CFG_4_SET		(TOPCKGEN_BASE + 0x084)
#define CLK_CFG_4_CLR		(TOPCKGEN_BASE + 0x088)
#define CLK_CFG_5		(TOPCKGEN_BASE + 0x090)
#define CLK_CFG_5_SET		(TOPCKGEN_BASE + 0x094)
#define CLK_CFG_5_CLR		(TOPCKGEN_BASE + 0x098)
#define CLK_CFG_6		(TOPCKGEN_BASE + 0x0A0)
#define CLK_CFG_6_SET		(TOPCKGEN_BASE + 0x0A4)
#define CLK_CFG_6_CLR		(TOPCKGEN_BASE + 0x0A8)
#define CLK_CFG_7		(TOPCKGEN_BASE + 0x0B0)
#define CLK_CFG_7_SET		(TOPCKGEN_BASE + 0x0B4)
#define CLK_CFG_7_CLR		(TOPCKGEN_BASE + 0x0B8)
#define CLK_CFG_8		(TOPCKGEN_BASE + 0x0C0)
#define CLK_CFG_8_SET		(TOPCKGEN_BASE + 0x0C4)
#define CLK_CFG_8_CLR		(TOPCKGEN_BASE + 0x0C8)
#define CLK_CFG_9		(TOPCKGEN_BASE + 0x0D0)
#define CLK_CFG_9_SET		(TOPCKGEN_BASE + 0x0D4)
#define CLK_CFG_9_CLR		(TOPCKGEN_BASE + 0x0D8)
#define CLK_CFG_10		(TOPCKGEN_BASE + 0x0E0)
#define CLK_CFG_10_SET		(TOPCKGEN_BASE + 0x0E4)
#define CLK_CFG_10_CLR		(TOPCKGEN_BASE + 0x0E8)
#define CLK_MISC_CFG_0		(TOPCKGEN_BASE + 0x104)
#define CLK_MISC_CFG_1		(TOPCKGEN_BASE + 0x108)
#define CLK_DBG_CFG		(TOPCKGEN_BASE + 0x10C)
#define CLK_SCP_CFG_0		(TOPCKGEN_BASE + 0x200)
#define CLK_SCP_CFG_1		(TOPCKGEN_BASE + 0x204)
#define CLK26CALI_0		(TOPCKGEN_BASE + 0x220)
#define CLK26CALI_1		(TOPCKGEN_BASE + 0x224)
#define CKSTA_REG		(TOPCKGEN_BASE + 0x230)
#define CKSTA_REG1		(TOPCKGEN_BASE + 0x234)
#define CLKMON_CLK_SEL_REG	(TOPCKGEN_BASE + 0x300)
#define CLKMON_K1_REG		(TOPCKGEN_BASE + 0x304)
#define CLK_AUDDIV_0		(TOPCKGEN_BASE + 0x320)
#define CLK_AUDDIV_1		(TOPCKGEN_BASE + 0x324)
#define CLK_AUDDIV_2		(TOPCKGEN_BASE + 0x328)
#define AUD_TOP_CFG		(TOPCKGEN_BASE + 0x32C)
#define AUD_TOP_MON		(TOPCKGEN_BASE + 0x330)
#define CLK_PDN_REG		(TOPCKGEN_BASE + 0x400)
#define CLK_EXTCK_REG		(TOPCKGEN_BASE + 0x500)

#if 0
/* MCUMIXEDSYS Register */
#define MCU_PLL_CON0            (MCUMIXED_BASE + 0x000)
#define MCU_PLL_CON1            (MCUMIXED_BASE + 0x004)
#define MCU_PLL_CON2            (MCUMIXED_BASE + 0x008)

#define ARMCAXPLL0_CON0         (MCUMIXED_BASE + 0x200)
#define ARMCAXPLL0_CON1         (MCUMIXED_BASE + 0x204)
#define ARMCAXPLL0_CON2         (MCUMIXED_BASE + 0x208)
#define ARMCAXPLL0_PWR_CON0      (MCUMIXED_BASE + 0x20c)

#define ARMCAXPLL1_CON0         (MCUMIXED_BASE + 0x210)
#define ARMCAXPLL1_CON1         (MCUMIXED_BASE + 0x214)
#define ARMCAXPLL1_CON2         (MCUMIXED_BASE + 0x218)
#define ARMCAXPLL1_PWR_CON0      (MCUMIXED_BASE + 0x21c)

#define ARMCAXPLL2_CON0         (MCUMIXED_BASE + 0x220)
#define ARMCAXPLL2_CON1         (MCUMIXED_BASE + 0x224)
#define ARMCAXPLL2_CON2         (MCUMIXED_BASE + 0x228)
#define ARMCAXPLL2_PWR_CON0      (MCUMIXED_BASE + 0x22c)

#define ARMCAXPLL3_CON0         (MCUMIXED_BASE + 0x230)
#define ARMCAXPLL3_CON1         (MCUMIXED_BASE + 0x234)
#define ARMCAXPLL3_CON2         (MCUMIXED_BASE + 0x238)
#define ARMCAXPLL3_PWR_CON0     (MCUMIXED_BASE + 0x23c)

#define ARMPLLDIV_MUXSEL        (MCUMIXED_BASE + 0x270)
#define ARMPLLDIV_CKDIV         (MCUMIXED_BASE + 0x274)
#define ARMPLLDIV_MON_EN        (MCUMIXED_BASE + 0x284)

/* MCUCFG Register */
#define ACLKEN_DIV              (MCUCFG_BASE + 0x640)
#endif

/* INFRASYS Register */
#if 0
#define TOP_CKMUXSEL            (INFRACFG_AO_BASE + 0x00)
#define TOP_CKDIV1_BIG          (INFRACFG_AO_BASE + 0x24)
#define TOP_CKDIV1_SML          (INFRACFG_AO_BASE + 0x28)
#define TOP_CKDIV1_BUS          (INFRACFG_AO_BASE + 0x2C)
#endif
#if 0
#define TOP_CKDIV1              (INFRACFG_AO_BASE + 0x08)
#define TOP_DCMCTL              (INFRACFG_AO_BASE + 0x10)
#define INFRA_BUS_DCM_CTRL      (INFRACFG_AO_BASE + 0x70)
#define PERI_BUS_DCM_CTRL       (INFRACFG_AO_BASE + 0x74)
#define INFRA_SW_CG0_SET          (INFRACFG_AO_BASE + 0x80)
#define INFRA_SW_CG0_CLR          (INFRACFG_AO_BASE + 0x84)
#define INFRA_SW_CG1_SET          (INFRACFG_AO_BASE + 0x88)
#define INFRA_SW_CG1_CLR          (INFRACFG_AO_BASE + 0x8C)
#define INFRA_SW_CG0_STA          (INFRACFG_AO_BASE + 0x90)
#define INFRA_SW_CG1_STA          (INFRACFG_AO_BASE + 0x94)
#define INFRA_SW_CG2_SET          (INFRACFG_AO_BASE + 0xA8)
#define INFRA_SW_CG2_CLR          (INFRACFG_AO_BASE + 0xAC)
#define INFRA_SW_CG2_STA          (INFRACFG_AO_BASE + 0xB0)
#define TOPAXI_PROT_EN           (INFRACFG_AO_BASE + 0x0220)
#define TOPAXI_PROT_STA1         (INFRACFG_AO_BASE + 0x0228)
#define INFRA_TOPAXI_PROTECTEN   (INFRACFG_AO_BASE + 0x0220)
#define INFRA_TOPAXI_PROTECTSTA1 (INFRACFG_AO_BASE + 0x0228)
#define INFRA_PLL_ULPOSC_CON0          (INFRACFG_AO_BASE + 0xB00)
#define INFRA_PLL_ULPOSC_CON1          (INFRACFG_AO_BASE + 0xB04)
#endif

/* Audio Register*/
#define AUDIO_TOP_CON0          (AUDIO_BASE + 0x0)
#define AUDIO_TOP_CON1          (AUDIO_BASE + 0x4)

#if 0

/* MFGCFG Register*/
#define MFG_CG_CON              (MFGCFG_BASE + 0)
#define MFG_CG_SET              (MFGCFG_BASE + 4)
#define MFG_CG_CLR              (MFGCFG_BASE + 8)

/* MMSYS Register*/
#define MMSYS_CG_CON0            (MMSYS_CONFIG_BASE + 0x100)
#define MMSYS_CG_SET0            (MMSYS_CONFIG_BASE + 0x104)
#define MMSYS_CG_CLR0            (MMSYS_CONFIG_BASE + 0x108)
#define MMSYS_CG_CON1            (MMSYS_CONFIG_BASE + 0x110)
#define MMSYS_CG_SET1            (MMSYS_CONFIG_BASE + 0x114)
#define MMSYS_CG_CLR1            (MMSYS_CONFIG_BASE + 0x118)

/* IMGSYS Register */
#define IMG_CG_CON              (IMGSYS_BASE + 0x0000)
#define IMG_CG_SET              (IMGSYS_BASE + 0x0004)
#define IMG_CG_CLR              (IMGSYS_BASE + 0x0008)

/* VDEC Register */
#define VDEC_CKEN_SET           (VDEC_GCON_BASE + 0x0000)
#define VDEC_CKEN_CLR           (VDEC_GCON_BASE + 0x0004)
#define VDEC_LARB_CKEN1_SET      (VDEC_GCON_BASE + 0x0008)
#define VDEC_LARB_CKEN1_CLR     (VDEC_GCON_BASE + 0x000C)

/* VENC Register*/
#define VENC_CG_CON             (VENC_GCON_BASE + 0x0)
#define VENC_CG_SET             (VENC_GCON_BASE + 0x4)
#define VENC_CG_CLR             (VENC_GCON_BASE + 0x8)
#endif
//#define SMI_LARB0_BASE          (0x14010000)
//#define SMI_LARB0_STAT	        ((UINT32P)(SMI_LARB0_BASE+0x000))
//#define SMI_LARB0_OSTD_CTRL_EN	((UINT32P)(SMI_LARB0_BASE+0x064))


/* for MTCMOS */
/*
/**************************************
 * for non-CPU MTCMOS
 **************************************/
#define DIS_SRAM_PDN			(0x1 << 8)
#define DIS_SRAM_PDN_ACK		(0x1 << 12)
#define DIS_SRAM_PDN_ACK_BIT0		(0x1 << 12)
#define DIS_PROT_BIT_ACK_MASK		((0x1 << 1) \
					|(0x1 << 2))
#define DIS_PROT_BIT_MASK		((0x1 << 1) \
					|(0x1 << 2))
/* Define MTCMOS power control */
#define DIS_PWR_STA_MASK		(0x1 << 3)
#define PWR_RST_B			(0x1 << 0)
#define PWR_ISO				(0x1 << 1)
#define PWR_ON				(0x1 << 2)
#define PWR_ON_2ND			(0x1 << 3)
#define PWR_CLK_DIS			(0x1 << 4)
#define SRAM_CKISO			(0x1 << 5)
#define SRAM_ISOINT_B			(0x1 << 6)
#define SLPB_CLAMP			(0x1 << 7)
#define SPM_PROJECT_CODE		0xb16
#define SLEEP_BASE			0x10006000
#define POWERON_CONFIG_EN		(SLEEP_BASE + 0x000)
#define DIS_PWR_CON			(SLEEP_BASE + 0x30C)
#define PWR_STATUS			(SLEEP_BASE + 0x180)
#define PWR_STATUS_2ND 			(SLEEP_BASE + 0x184)
/*
int spm_mtcmos_ctrl_disp(int state);
*/
#endif
